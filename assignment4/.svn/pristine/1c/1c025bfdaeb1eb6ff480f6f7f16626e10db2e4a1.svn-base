/*
 * @Author       : Hao Zhang
 * @Date         : 2021-06-04 18:03:58
 * @LastEditors  : Hao Zhang
 * @LastEditTime : 2021-06-04 19:37:28
 * @FilePath     : \system programming\assignment4\part1.c
 */
#include "slow_functions.h"
#include <stdio.h>
#include <unistd.h>
#include <pthread.h>
#include <string.h>
static pthread_mutex_t lock;
int main()
{
    int empty;
    //create child  pthread for slow_function1
    pthread_t func1;
    int pok;
    int count = 0;
    int i;
    for (i = 0; i < 10; i++)
    {
        pok = pthread_create(&func1, NULL, &slow_function1, NULL);
        if (pok != 0)
            printf("cannot produce func1\n");
    }

    //create child pthread for slow_function1
    pthread_t func2;
    pok = pthread_create(&func2, NULL, &slow_function2, NULL);
    if (pok != 0)
        printf("cannot produce func2\n");

    int jok = pthread_join(func2, NULL);
    if (jok != 0)
        printf("cannot join\n");
    return 0;
}